name: 'Push to Docker Image Registries'
on:
  push:
    tags:
      - '**'
env:
  DOCKER_HUB_TAG_NAME: "${{ secrets.DOCKER_HUB_USERNAME }}/troubleshooter-editor-back-end:${{ github.ref_name }}"
  AWS_REGION: 'ap-northeast-2'
  AWS_ECR_REPOSITORY: 'troubleshooter-editor/back-end'
jobs:
  build:
    name: 'Build JAR'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout code'
        uses: 'actions/checkout@v4'
      - name: 'Set up JDK 21'
        uses: 'actions/setup-java@v4'
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
      - name: 'Build JAR'
        run: './gradlew clean bootJar -x test'
      - name: 'Upload JAR artifact'
        uses: 'actions/upload-artifact@v4'
        with:
          name: 'artifact'
          path: |
            build/libs/*.jar
            Dockerfile
  push-to-docker-hub:
    name: 'Push to Docker Hub'
    runs-on: 'ubuntu-latest'
    needs: 'build'
    steps:
      - name: 'Download JAR artifact'
        uses: 'actions/download-artifact@v4'
        with:
          name: 'artifact'
      - name: 'Build Docker image'
        run: |
          docker buildx build -t $DOCKER_HUB_TAG_NAME .
          docker buildx build -t ${{ secrets.DOCKER_HUB_USERNAME }}/troubleshooter-editor-back-end:latest .
      - name: 'Log in to Docker Hub'
        uses: 'docker/login-action@v3'
        with:
          username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          password: "${{ secrets.DOCKER_HUB_PASSWORD }}"
      - name: 'Push Docker image to Docker Hub'
        run: |
          docker image push $DOCKER_HUB_TAG_NAME
          docker image push ${{ secrets.DOCKER_HUB_USERNAME }}/troubleshooter-editor-back-end:latest
      - name: 'Logout of Docker Hub'
        run: 'docker logout'
  push-to-aws-ecr:
    name: 'Push to AWS ECR'
    runs-on: 'ubuntu-latest'
    needs: 'build'
    steps:
    - name: 'Download JAR artifact'
      uses: 'actions/download-artifact@v4'
      with:
        name: 'artifact'
    - name: 'Configure AWS credentials'
      uses: 'aws-actions/configure-aws-credentials@97834a484a5ab3c40fa9e2eb40fcf8041105a573'
      with:
        aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
        aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        aws-region: "${{ env.AWS_REGION }}"
    - name: 'Log in to AWS ECR'
      id: 'login-to-aws-ecr'
      uses: 'aws-actions/amazon-ecr-login@1101c60d69679706db631d7e999b798f4542bbc7'
    - name: 'Build Docker image and push to AWS ECR'
      run: |
        docker build -t $ECR_REGISTRY/$AWS_ECR_REPOSITORY:$IMAGE_TAG .
        docker build -t $ECR_REGISTRY/$AWS_ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$AWS_ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$AWS_ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
        docker push $ECR_REGISTRY/$AWS_ECR_REPOSITORY:latest
        echo "image=$ECR_REGISTRY/$AWS_ECR_REPOSITORY:latest" >> $GITHUB_OUTPUT
      env:
        ECR_REGISTRY: ${{ steps.login-to-aws-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
